library(spam)
library(LatticeKrig)
LON<-rep(seq(1.25,23.75,by=2.5),6)
LAT<-rep(seq(46.25,58.75,by=2.5),each=10)
x<-cbind(LON,LAT)
LKinfo<-LKrigSetup(x,nlevel=2,a.wght=5,NC=5,NC.buffer=0, overlap=0.7,alpha=c(0.5,0.5))
try(LKinfoCheck(LKinfo))
par(mfrow=c(2,2),mar=c(3,3,3,3))
look1<- LKrigLatticeCenters(LKinfo, Level=1)
plot(make.surface.grid(look1))
look2<- LKrigLatticeCenters(LKinfo, Level=2)
plot(make.surface.grid(look2))
set.seed(1)
Q<-precmat.GMRFreglat(10,6,par=0.2,model="m1p1")
y <- rmvnorm.prec(1, mu = rep(0,60), Q)
dim(y)<-c(10,6)
image.plot(y,zlim=c(-3,6))
obj1<-LatticeKrig(x,c(y),LKinfo=LKinfo)
#modify the data 'y': large scale inhomogeneity in one pixel.
yNew<-y
yNew[5,3]<-yNew[5,3]+5
image.plot(yNew,zlim=c(-3,6))
obj2<-LatticeKrig(x,c(yNew),LKinfo=LKinfo)
#compare the coefficients
plot(obj1$c.coef,type="l")
lines(obj2$c.coef,col="red")
library(spam)
library(LatticeKrig)
LON<-rep(seq(1.25,23.75,by=2.5),6)
LAT<-rep(seq(46.25,58.75,by=2.5),each=10)
x<-cbind(LON,LAT)
LKinfo<-LKrigSetup(x,nlevel=2,a.wght=5,NC=5,NC.buffer=0, overlap=0.7,alpha=c(0.5,0.5))
try(LKinfoCheck(LKinfo))
par(mfrow=c(2,2),mar=c(3,3,3,3))
look1<- LKrigLatticeCenters(LKinfo, Level=1)
plot(make.surface.grid(look1))
look2<- LKrigLatticeCenters(LKinfo, Level=2)
plot(make.surface.grid(look2))
set.seed(1)
LON<-rep(seq(1.25,23.75,by=2.5),6)
LAT<-rep(seq(46.25,58.75,by=2.5),each=10)
x<-cbind(LON,LAT)
LKinfo<-LKrigSetup(x,nlevel=2,a.wght=5,NC=5,NC.buffer=0, overlap=0.7,alpha=c(0.5,0.5))
try(LKinfoCheck(LKinfo))
par(mfrow=c(2,2),mar=c(3,3,3,3))
look1<- LKrigLatticeCenters(LKinfo, Level=1)
plot(make.surface.grid(look1))
look2<- LKrigLatticeCenters(LKinfo, Level=2)
plot(make.surface.grid(look2))
set.seed(1)
Q<-precmat.GMRFreglat(10,6,par=0.2,model="m1p1")
y <- rmvnorm.prec(1, mu = rep(0,60), Q)
dim(y)<-c(10,6)
image.plot(y,zlim=c(-3,6))
obj1<-LatticeKrig(x,c(y),LKinfo=LKinfo)
#modify the data 'y': large scale inhomogeneity in one pixel.
yNew<-y
yNew[5,3]<-yNew[5,3]+5
image.plot(yNew,zlim=c(-3,6))
obj2<-LatticeKrig(x,c(yNew),LKinfo=LKinfo)
#compare the coefficients
plot(obj1$c.coef,type="l")
lines(obj2$c.coef,col="red")
#the coefficients in the inhomogeneous field closer to zero...
obj1
obj2
names (obj1)
obj1$lambda.fixed
obj2<-LatticeKrig(x,c(yNew),LKinfo=LKinfo, lambda=obj1$lambda.fixed)
obj2
obj1$sigma.MLE
obj1$rho.MLE
obj2$sigma.MLE
obj2$rho.MLE
obj2b<- LKrig( x,c(yNew),LKinfo=LKinfo, lambda=obj1$lambda.fixed)
obj2b
plot( obj1$c.coef,obj2b$c.coef)
plot(obj1$c.coef,type="l")
lines(obj2b$c.coef,col="red")
library( fields)
x<- 1:10
rdist( x, x)
X<- cbind( x, x+5)
X<- X[1:5,]
X
rdist( X)
help( dyn.load)
rdist
library( fields)
data( lennon)
apply( lennon, 2, "mean")-> m1
apply( lennon, 1, "mean")-> m2
look<- outer( m1,m2,"+")
image(lennon, col=grey.colors( 200))
image(look, col=grey.colors( 200))
library(dataWorkshop)
data(BoulderDaily)
names(BoulderDaily)
BoulderDaily$time
boxplot( precip~month, BoudlerDaily)
boxplot( precip~month, BoulderDaily)
data( BoulderTemperature)
stats( BoulderTemperature)
tapply( BoulderDaily$precip, BoulderDaily$month, 'sum')
tapply( BoulderDaily$precip, BoulderDaily$month, 'sum', na.rm =TRUE)
tapply( BoulderDaily$precip, BoulderDaily$month, 'mean', na.rm =TRUE)
tapply( BoulderDaily$precip, BoulderDaily$month, 'mean', na.rm =TRUE)*30
data( BoulderTemperature)
row.names(BoulderTemperature)
as.numeric(row.names(BoulderTemperature))
apply( BoulderTemperature[,6:8], 2, "median")-> look
look
apply( BoulderTemperature[,6:8], 1, "median")-> look
look
plot( look)
yearLabel<- row.names(BoulderTemperature)
Year <- as.numeric(yearLabel)
Year
package.skeleton
help(package.skeleton)
packageskeleton("PETScR")
package.skeleton("PETScR")
dir()
pwd()
remove(list=ls())
package.skeleton("PETScR")
source('~/Home/Src/PETScR/R/ExpMultTest.R', echo=TRUE)
source('~/Home/Src/PETScR/R/ExpMultTest.R', echo=TRUE)
prompt( ExpMultTest.cov)
ExpMultTest.cov
source('~/Home/Src/PETScR/R/ExpMultTest.R', echo=TRUE)
set.seed( 123)
x1<- matrix( runif( 20), 10,2)
x2<- matrix( runif( 18),  9,2)
C<- matrix( rnorm(18*4), 18,4)
theta<- .5
look<- ExpMultTest.cov( x1,x2, theta, C)
ExpMultTest.cov( x1,x2, theta, C)
ExpMultTest.cov
set.seed( 123)
x1<- matrix( runif( 20), 10,2)
x2<- matrix( runif( 18),  9,2)
C<- matrix( rnorm(18*4), 18,4)
theta<- .5
look<- ExpMultTest.cov( x1,x2, theta, p=1, C=C)
library( fields)
set.seed( 123)
x1<- matrix( runif( 20), 10,2)
x2<- matrix( runif( 18),  9,2)
C<- matrix( rnorm(18*4), 18,4)
theta<- .5
look<- ExpMultTest.cov( x1,x2, theta, p=1, C=C)
look
Sigma<- exp(-rdist( x1,x2))
Sigma%*%C
dim( Sigma)
dim( C)
set.seed( 123)
x1<- matrix( runif( 20), 10,2)
x2<- matrix( runif( 18),  9,2)
C<- matrix( rnorm(9*4), 9,4)
theta<- .5
look<- ExpMultTest.cov( x1,x2, theta, p=1, C=C)
# compare to
Sigma<- exp(-rdist( x1,x2))
Sigma%*%C
look
dim( C)
Sigma<- exp(-rdist( x1,x2)/theta)
Sigma%*%C
look
set.seed( 123)
x1<- matrix( runif( 20), 10,2)
x2<- matrix( runif( 18),  9,2)
C<- matrix( rnorm(9*4), 9,4)
theta<- .5
look<- ExpMultTest.cov( x1,x2, theta, p=1, C=C)
# compare to
Sigma<- exp(-rdist( x1,x2)/theta)
look2<- Sigma%*% C
look
look2
set.seed( 123)
x1<- matrix( runif( 20), 10,2)
x2<- matrix( runif( 18),  9,2)
C<-  rnorm(9)
theta<- .5
look<- ExpMultTest.cov( x1,x2, theta, p=1, C=C)
# compare to
Sigma<- exp(-rdist( x1,x2)/theta)
look2<- Sigma%*% C
look
look2
rdist
load("~/Home/Teaching/RDataAnalysis/Week3/BoulderTemperature.rda")
dim( BoulderTemperature)
test<- c( 1,3,4.5, NA,10)
ind<- is.na(test)
sum( ind)
ls()
remove( list=ls())
save.image()
look<- matrix( 1:12, ncol=4, nrow=3)
look
look[2,3] <- NA
look
look2<- is.na( look)
look2
look[ look==4]
look==4
look==NA
is.numeric(look)
is.numeric(look)
look<- matrix( 1:12, ncol=4, nrow=3)
look
look[2,3] <- NA
look
look2<- is.na( look)
look2
is.numeric(look)
look
apply( look, 1, "max")
apply( look, 1, "max", na.rm=TRUE)
apply( look, 2, "max")
look
image(1:3, 1:4, look, col=rainbow(256))
image(1:3, 1:4, look, col=rainbow(256))
quartz()
image(1:3, 1:4, look, col=rainbow(256))
library( fields)
image.plot(1:3, 1:4, look, col=rainbow(256))
look[,1]
look[1,]
look
look[1:2, c(1,3)]
WB<- WorldBankCO2
library(dataWorkshop)
data(WorldBankCO2 )
WB<- WorldBankCO2
plot(CO2.cap ~ GDP.cap, data=WB, log="xy",
xlab="GDP", ylab="CO2")
quartz()
plot(CO2.cap ~ GDP.cap, data=WB, log="xy",
xlab="GDP", ylab="CO2")
x<- log10(WB$GDP.cap )
y<- log10( WB$CO2.cap)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
x<- log10(WB$GDP.cap )
y<- log10( WB$CO2.cap)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
x<- log10(WB$GDP.cap )
y<- log10( WB$CO2.cap)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
x<- log10(WB$GDP.cap )
y<- log10( WB$CO2.cap)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
setwd("~/Home/Teaching/RDataAnalysis/Week3")
load( "BoulderTemperature.rda")
# Or use:
#library( dataWorkshop)
# data(BoulderTemperature)
# some examples of subsetting and conversions
BT1<-BoulderTemperature$jun
YearLabels<- row.names(BoulderTemperature)
Year<- as.numeric(YearLabels)
##########################
# a scatterplot ( also a time series plot)
plot( Year, BT1)
# changing size of  plotting symbol  e.g. .5= half size 2= twice size
plot(Year, BT1, cex=.5)
# changing the plotting symbol
plot( Year, BT1, pch=16)
# changing the color
plot( Year, BT1, pch=16, col="magenta")
# broken lines
plot( Year, BT1, type="l")
# good plots should have labels and a title
plot(Year, BT1, type="l", xlab="Year", ylab="Temperature (F)")
title("Boulder mean June Temperatures")
# horizontal line at 70 degrees
abline( h= 70)
abline( h= mean( BT1, na.rm=TRUE))
abline( h= mean( BT1, na.rm=TRUE), col="blue")
q90<- quantile( BT1, .9,  na.rm=TRUE)
q10<- quantile( BT1, .1,  na.rm=TRUE)
abline( h= c( q90, q10))
plot(Year, BT1, type="l", xlab="Year", ylab="Temperature (F)")
title("Boulder mean June Temperatures")
abline( h= mean( BT1, na.rm=TRUE), col="blue")
points( Year[ind],BT1[ind])
lines( Year, BT2)
BT2<- BoulderTemperature$jul
# complete plot
plot(Year, BT1, type="l", xlab="Year", ylab="Temperature (F)")
title("Boulder mean June Temperatures")
abline( h= mean( BT1, na.rm=TRUE), col="blue")
points( Year[ind],BT1[ind])
ind<- BT1 > q90
points( Year[ind],BT1[ind])
BT2<- BoulderTemperature$jul
# complete plot
plot(Year, BT1, type="l", xlab="Year", ylab="Temperature (F)")
title("Boulder mean June Temperatures")
abline( h= mean( BT1, na.rm=TRUE), col="blue")
points( Year[ind],BT1[ind])
lines( Year, BT2)
lines( Year, BT2, col="red")
plot( WB$GDP.cap, WB$CO2.cap,xlab="GDP", ylab="CO2")
title("CO2 emissions by country")
load("WorldBankCO2.rda")
WB<- WorldBankCO2
#Q how do you look at the first row on these data?
WB[1,]
#Q how would you extract the country names?
cNames<- row.names(WB)
#Q make a scatterplot of GDP.cap and CO2.cap
#     (wealth of country verses the amount of CO2 emitted)
plot( WB$GDP.cap, WB$CO2.cap,xlab="GDP", ylab="CO2")
title("CO2 emissions by country")
plot( log10(WB$GDP.cap), log10(WB$CO2.cap),xlab=" log10 GDP",
ylab="log10 CO2")
title("CO2 emissions by country")
plot(CO2.cap ~ GDP.cap, data=WB, log="xy", xlab="GDP", ylab="CO2")
library( fields)
fit<- sreg( x,y) # spline smoother
lines( fit$predicted, col="orange4", lwd=4)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
fit<- sreg( x,y) # spline smoother
lines( fit$predicted, col="orange4", lwd=4)
x<- log10(WB$GDP.cap )
y<- log10( WB$CO2.cap)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
library( fields)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
fit<- sreg( x,y) # spline smoother
lines( fit$predicted, col="orange4", lwd=4)
