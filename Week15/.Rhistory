print( beta)
print( sqrt( mean( (beta- betaOLD)^2)))
betaOLD<-beta
for( j in 1:m){
X[j] <- lm( c(Y[j,]) ~ beta - 1)$coefficients
}
}
pred<-  outer( X, beta, "*")
return( list( beta=beta, X=X, fitted.values= pred))
}
look1<- fitPC( Y)
fitPC<- function( Y, niter=5){
m<- nrow( Y)
n<- ncol(Y)
X<- rnorm( nrow(Y))
beta<- betaOLD<- rep( 0, n)
for( I in 1:niter){
for( k in 1:n){
beta[k]<- lm( Y[,k]~ X-1) $coefficients
}
beta<- beta/ sqrt( sum( beta^2) )
print( beta)
print( sqrt( mean( (beta- betaOLD)^2)))
betaOLD<-beta
for( j in 1:m){
X[j] <- lm( c(Y[j,]) ~ beta - 1)$coefficients
}
}
pred<-  outer( X, beta, "*")
return( list( beta=beta, X=X, fitted.values= pred))
}
look1<- fitPC( Y)
look1<- fitPC( Y, 10)
look1$beta
plot( look1$beta)
look2<- fitPC( Y- look1$fitted.values)
plot( look2$beta)
plot( look1$X, look2$X)
matplot(1:12, cbind( look1$beta, look2$beta), type="l" )
help( scale)
Yc<- scale( Y, center=TRUE, scale=FALSE)
stats( Yc)
COseason<- colMeans( Yc)
look1<- fitPC( Yc)
look2<- fitPC( Yc- look1$fitted.values)
matplot(1:12, cbind( look1$beta, look2$beta), type="l" )
plot( look1$X, look2$X)
quilt.plot( loc, look1$X)
loc<- CO.loc[ind==0,]
look1<- fitPC( Yc)
look2<- fitPC( Yc- look1$fitted.values)
matplot(1:12, cbind( look1$beta, look2$beta), type="l" )
plot( look1$X, look2$X)
quilt.plot( loc, look1$X)
look1<- fitPC( Y)
look2<- fitPC( Y- look1$fitted.values)
matplot(1:12, cbind( look1$beta, look2$beta), type="l" )
plot( look1$X, look2$X)
quilt.plot( cbind(look1$X, look2$X), elev)
elev<- CO.elev[ind==0]
quilt.plot( cbind(look1$X, look2$X), elev)
cor( look1$X, look2$X)
set.panel(2,3)
matplot(1:12, cbind( look1$beta, look2$beta), xlab="months", ylab="beta",
type="l" )
plot( look1$X, look2$X)
quilt.plot( loc, look1$X)
quilt.plot( loc, look2$X)
quilt.plot( cbind(look1$X, look2$X), elev)
quartz()
set.panel(2,3)
matplot(1:12, cbind( look1$beta, look2$beta), xlab="months", ylab="beta",
type="l" )
plot( look1$X, look2$X)
quilt.plot( loc, look1$X)
quilt.plot( loc, look2$X)
quilt.plot( cbind(look1$X, look2$X), elev)
quilt.plot( loc, look1$X)
surface( Tps( loc, look1$X))
surface( Tps( loc, look1$X), type="I")
surface( Tps( loc, look1$X), type="I", col=two.colors())
set.panel(2,3)
matplot(1:12, cbind( look1$beta, look2$beta), xlab="months", ylab="beta",
type="l" )
plot( look1$X, look2$X)
quilt.plot( loc, look1$X)
surface( Tps( loc, look1$X), type="I", col=two.colors())
quilt.plot( loc, look2$X)
surface( Tps( loc, look1$X), type="I", col=two.colors())
#quilt.plot( cbind(look1$X, look2$X), elev)
set.panel(3,2)
matplot(1:12, cbind( look1$beta, look2$beta), xlab="months", ylab="beta",
type="l" )
plot( look1$X, look2$X)
quilt.plot( loc, look1$X)
surface( Tps( loc, look1$X), type="I", col=two.colors())
quilt.plot( loc, look2$X)
surface( Tps( loc, look1$X), type="I", col=two.colors())
#quilt.plot( cbind(look1$X, look2$X), elev)
set.panel(3,2)
matplot(1:12, cbind( look1$beta, look2$beta), xlab="months", ylab="beta",
type="l" )
plot( look1$X, look2$X)
quilt.plot( loc, look1$X)
surface( Tps( loc, look1$X), type="I", col=two.colors())
quilt.plot( loc, look2$X)
surface( Tps( loc, look2$X), type="I", col=two.colors())
#quilt.plot( cbind(look1$X, look2$X), elev)
plot( look1$X, look2$X)
identify(look1$X, look2$X)
matplot( 1:12, t(Y))
matplot( 1:12, t(Y), type="l", lty=1, col="grey")
lines( 1:12, Y[183,], col="red")
plot( look1$X, look2$X)
identify(look1$X, look2$X)
matplot( 1:12, t(Y), type="l", lty=1, col="grey")
matlines( 1:12, t( Y[c(183,57, 239),] ), col="red")
Yapprox<- look1$fitted.values + look2$fitted.values
matplot( 1:12, t(Yapprox), type="l", lty=1, col="grey")
matlines( 1:12, t( Yapprox[c(183,57, 239),] ), col="red")
set.seed(123)
U<- matrix( rnorm(200), 100,2)
U[,2]<- U[,2]*3
plot( U)
U<- matrix( rnorm(200), 100,2)
U<- U/ sqrt(rowSums(U^2))
U[,2]<- U[,2]*3
plot( U)
U0<- matrix( rnorm(200), 100,2)
U0<- U0/ sqrt(rowSums(U0^2))
U0[,2]<- U0[,2]*3
U1<- matrix( 0, 100,2)
U<- cbind( U0,U1)
V<- matrix( rnorm( 16),4,4)
qr( V)
help( qr)
qr.Q(qr( V))
V<- matrix( rnorm( 16),4,4)
Vqr<- qr( V)
V<- qr.Q( Vqr)
Y<- U%*%V
pairs( Y)
set.seed(123)
U0<- matrix( unif(2000), 1000,2)
U0<- U0/ sqrt(rowSums(U0^2))
ind<- sqrt(rowSums(U0^2))<=1
U0<- U0[ind,]
U0[,2]<- U0[,2]*3
U1<- matrix( 0, 1000,2)
U<- cbind( U0,U1)
U1<- matrix( 0, nrow( U0),2)
U<- cbind( U0,U1)
pairs( U)
set.seed(123)
U0<- matrix( unif(2000), 1000,2)
U0<- U0/ sqrt(rowSums(U0^2))
ind<- sqrt(rowSums(U0^2))<=1
U0<- U0[ind,]
plot( U0)
set.seed(123)
U0<- matrix( unif(2000), 1000,2)
U0<- U0
ind<- sqrt(rowSums(U0^2))<=1
U0<- U0[ind,]
U0[,2]<- U0[,2]*3
plot( U0)
set.seed(123)
U0<- matrix( unif(2000), 1000,2)
U0<- U0
plot( U0)
set.seed(123)
U0<- matrix( runif(2000), 1000,2)
U0<- U0
ind<- sqrt(rowSums(U0^2)) <=1
U0<- U0[ind,]
U0[,2]<- U0[,2]*3
U1<- matrix( 0, nrow( U0),2)
U<- cbind( U0,U1)
pairs( U)
set.seed(123)
U0<- matrix( runif(2000, -1,1), 1000,2)
U0<- U0
ind<- sqrt(rowSums(U0^2)) <=1
U0<- U0[ind,]
U0[,2]<- U0[,2]*3
U1<- matrix( 0, nrow( U0),2)
U<- cbind( U0,U1)
pairs( U)
V<- matrix( rnorm( 16),4,4)
Vqr<- qr( V)
V<- qr.Q( Vqr)
Y<- U%*%V
pairs( Y)
V<- cbind( U0[,1] - U0[,2], U0[,1] + U0[,2], U0[,1])
pairs( V)
set.seed(123)
U0<- matrix( runif(2000, -1,1), 1000,2)
#ind<- sqrt(rowSums(U0^2)) <=1
#U0<- U0[ind,]
V<- cbind( U0[,1] - U0[,2], U0[,1] + U0[,2], U0[,1])
V<- cbind( U0[,1] - U0[,2], U0[,1] + U0[,2], U0[,1], U0[,2])
V<- cbind( U0[,1] - U0[,2], U0[,1] + U0[,2], U0[,1], U0[,2])
pairs( V)
library( rgl)
plot3d( V[,1:3])
V<- cbind( U0[,1] - U0[,2], U0[,1] + U0[,2], U0[,1], U0[,2] +.5* U0[,1])
V<- cbind( U0[,1] - U0[,2], U0[,1] + U0[,2],  U0[,2] +
.5* U0[,1],2*U0[,1]-U0[,2])
pairs( V)
V<- cbind( U0[,1] - .2*U0[,2], U0[,1] + U0[,2],  U0[,2] +
.5* U0[,1],2*U0[,1]-U0[,2])
pairs( V)
plot3d( V[,1:3])
U<- cbind( U0, matrix( rnorm(1000*2), 1000,2) )
pairs( U)
U<- cbind( U0, .1*matrix( rnorm(1000*2), 1000,2) )
pairs( U)
plot3d( U[,1:3])
set.seed(123)
U0<- matrix( runif(2000, -1,1), 1000,2)
U<- cbind( U0, U0[,1] + U0[,2] )
plot3d( U)
pairs( U)
set.seed(123)
U0<- matrix( rnorm(2000), 1000,2)
U<- cbind( U0, U0[,1] + U0[,2] )
pairs( U)
look1<- fitPC( U)
sqrt(mean( (look1$fitted.values- U)^2))
look2<- fitPC( U)
sqrt(mean( (look1$fitted.values + look2$fitted.values- U)^2))
sqrt(mean( U))
sqrt(mean( U^2))
sqrt(mean( ( (look1$fitted.values + look2$fitted.values )- U)^2))
look1<- fitPC( U, niter)
sqrt(mean( (look1$fitted.values- U)^2))
look2<- fitPC( U- look1$fitted.values)
sqrt(mean( ( (look1$fitted.values + look2$fitted.values )- U)^2))
sqrt(mean( U^2))
set.seed(123)
sqrt(mean( U^2))
U0<- matrix( rnorm(2000), 1000,2)
U<- cbind( U0, U0[,1] + U0[,2] )
look1<- fitPC( U, niter)
sqrt(mean( (look1$fitted.values- U)^2))
look2<- fitPC( U- look1$fitted.values)
sqrt(mean( ( (look1$fitted.values + look2$fitted.values )- U)^2))
look1<- fitPC( U)
sqrt(mean( (look1$fitted.values- U)^2))
look2<- fitPC( U- look1$fitted.values)
sqrt(mean( ( (look1$fitted.values + look2$fitted.values )- U)^2))
set.seed(123)
sqrt(mean( U^2))
U0<- matrix( rnorm(2000), 1000,2)
ind<- sqrt((U0[,1]^2 + U0[,2]^2)) >= .5
U0<- U0[ind,]
U<- cbind( U0, U0[,1] + U0[,2] )
plot3d( U)
pairs( U)
set.seed(123)
sqrt(mean( U^2))
U0<- matrix( rnorm(2000), 1000,2)
ind<- sqrt((U0[,1]^2 + U0[,2]^2)) >= .5
U0<- U0[ind,]
U<- cbind( U0[,1],U0[,1]- U0[,2], U0[,1] + U0[,2] )
pairs( U)
U<- cbind( U0[,1],U0[,1]- U0[,2], U0[,1] + 2*U0[,2] )
pairs( U)
plot3d( U)
look1<- fitPC( U)
sqrt(mean( (look1$fitted.values- U)^2))
look2<- fitPC( U- look1$fitted.values)
sqrt(mean( ( (look1$fitted.values + look2$fitted.values )- U)^2))
plot( look1$X, look2$X)
remove( list=ls())
ls()
library( dataWorkshop)
data( VictoriaT)
names( VictoriaT)
VictoriaT[10,20,28]
VictoriaT$[10,20,28]
VictoriaT$z[10,20,28]
VictoriaT$z[1:100,20,28]
VictoriaT$z[50,20,28]
VictoriaT$z[55,20,28]
VictoriaT$z[55:70,20,28]
dim(VictoriaT )
dim(VictoriaT$z )
names( VictoriaT)
VictoriaT$time
names( VictoriaT)
plot( loc)
plot( VictoriaT$loc)
quartz()
plot( VictoriaT$loc)
data( "miniTriathlon")
Y<-  miniTriathlon
library( rgl)
plot3d( Y)
library( rgl)
dim(Y)
Y[1,]
Y
plot3d( Y)
look
look<- outer(1:3, c(4,5,10,20), "*")
look
look<- outer( rnorm(10), rnorm(3),"*")
look
look
dim( Y)
beta<- rep(NA,3)
X<- rnorm( 110)
for( j in 1:3){
beta[j]<- lm( Y[,j]~ X - 1)$coefficient
}
beta
beta<- beta/sqrt(sum( beta^2))
beta
for( k in 1:110){
X[k]<- lm( Y[k,] ~ beta - 1)$coefficient
}
X
beta
plot( X)
quartz()
plot(1:110, X)
plot(1:110, -X)
for( I in 1:5){
for( j in 1:3){
beta[j]<- lm( Y[,j]~ X - 1)$coefficient
}
beta<- beta/sqrt(sum( beta^2))
print( beta)
for( k in 1:110){
X[k]<- lm( Y[k,] ~ beta - 1)$coefficient
}
}
beta<- rep(NA,3)
X<- rnorm( 110)
for( I in 1:15){
for( j in 1:3){
beta[j]<- lm( Y[,j]~ X - 1)$coefficient
}
beta<- beta/sqrt(sum( beta^2))
print( beta)
for( k in 1:110){
X[k]<- lm( Y[k,] ~ beta - 1)$coefficient
}
}
X[1:10]
look<- outer( X, beta, "*")
look
plot3d( Y)
plot3d( look, col="red", add=TRUE)
fitPC<- function( Y, niter=5){
m<- nrow( Y)
n<- ncol(Y)
X<- rnorm( nrow(Y))
beta<- betaOLD<- rep( 0, n)
for( I in 1:niter){
for( k in 1:n){
beta[k]<- lm( Y[,k]~ X-1) $coefficients
}
beta<- beta/ sqrt( sum( beta^2) )
print( beta)
print( sqrt( mean( (beta- betaOLD)^2)))
betaOLD<-beta
for( j in 1:m){
X[j] <- lm( c(Y[j,]) ~ beta - 1)$coefficients
}
}
pred<-  outer( X, beta, "*")
return( list( beta=beta, X=X, fitted.values= pred))
}
look<-fitPC( Y)
names( look)
look$beta
plot( -look$X)
look<-fitPC( Y)
plot3d( Y)
plot3d( look$fitted.values, col="red")
look<-fitPC( Y)
plot3d( Y)
plot3d( look$fitted.values, col="red", add=TRUE)
look2<-fitPC( Y- look$fitted.values)
look2<-fitPC( Y- look$fitted.values, 20)
plot3d( look$fitted.values + look2$fitted.values,
col="magenta", add=TRUE)
plot(Y[,1], Yapprox[,1] )
Yapprox<- look$fitted.values + look2$fitted.values
plot(Y[,1], Yapprox[,1] )
set.panel( 2,3)
for( k in 1:3){
plot(Y[,k], Yapprox[,k] )
}
set.panel( 2,3)
for( k in 1:3){
plot(Y[,k], look$fitted.values[,k] )
}
for( k in 1:3){
plot(Y[,k], Yapprox[,k] )
}
look$beta
look2$beta
plot( look$X, look2$X)
set.panel()
plot( look$X, look2$X)
help( hclust)
setwd("~/Home/Teaching/APPM2720/Week15")
load("SP500Daily.rda")
library( fields)
ls()
dim(SP500Prices )
time<- rownames( SP500PercentChange)
time
SP500Mean<- apply( SP500PercentChange, 2, "mean")
SP500Mean
SP500Mean<- apply( SP500PercentChange, 1, "mean")
SP500Mean
plot( as.Date(time), SP500Mean, type="l")
plot( as.Date(time), SP500Mean, type="l")
lines( as.Date(time),SP500PercentChange[,"NFLX"], col="red" )
plot( as.Date(time),SP500PercentChange[,"NFLX"], col="red" )
lines( as.Date(time), SP500Mean, type="l", col="grey", lwd=3)
plot( as.Date(time),SP500PercentChange[,"NFLX"], col="red", type="l" )
lines( as.Date(time), SP500Mean, type="l", col="grey", lwd=3)
corSP<- cor( SP500PercentChange)
dim ( corSP)
image.plot( corSP)
quartz()
image.plot( corSP)
dSP<- dist( t( SP500PercentChange))
dSP
summary( dSP)
length( dSP)
(477^2)/2
fit<- hclust( dSP)
plot( fit)
plot( fit, cex=.1)
cluster5<- cutree(fit, k=5)
cluster5
table( cluster5)
SP500Names
ind5<- as.numeric(cluster5 )
ind5<- as.numeric(cluster5 )
SP500Names[ind5>= 3, ]
table( cluster5)
fit1<- cmdscale( dSP, k=2)
plot( fit1$points)
plot( fit1$point)
names( fit1)
fit1<- cmdscale( dSP, k=2)
names( fit1)
plot( fit1)
fit1<- cmdscale( dSP, eig=TRUE, k=2)
names( fit1)
plot( fit1$points)
plot( fit1$points)
text( fit1$points, labels= SP500Names[,1])
plot( fit1$points)
text( fit1$points, labels= SP500Names[,2], cex=.5)
colscale<- rainbow(10)
colscale
cluster10<- cutree(fit, k=10)
colscale<- rainbow(10)
plot( fit1$points, col=colscale[ as.numeric(cluster10)])
oad("SP500Daily.rda")
library( fields)
time<- rownames( SP500PercentChange)
SP500Mean<- apply( SP500PercentChange, 1, "mean")
plot( as.Date(time), SP500Mean, type="l")
lines( as.Date(time),SP500PercentChange[,"NFLX"], col="red" )
quartz()
plot( as.Date(time),SP500PercentChange[,"NFLX"], col="red", type="l" )
lines( as.Date(time), SP500Mean, type="l", col="grey", lwd=3)
corSP<- cor( SP500PercentChange)
image.plot( corSP)
dSP<- dist( t( SP500PercentChange))
fit<- hclust( dSP)
plot( fit)
plot( fit, cex=.5)
plot( fit, cex=.1)
cluster5<- cutree(fit, k=5)
table( cluster5)
ind5<- as.numeric(cluster5 )
SP500Names[ind5>= 3, ]
fit1<- cmdscale( dSP, eig=TRUE, k=2)
plot( fit1$points)
text( fit1$points, labels= SP500Names[,2], cex=.5)
plot( fit1$points)
cluster10<- cutree(fit, k=10)
colscale<- rainbow(10)
plot( fit1$points, col=colscale[ as.numeric(cluster10)])
cluster10<- cutree(fit, k=10)
colscale<- rainbow(10)
plot( fit1$points, col=colscale[ as.numeric(cluster10)],pch=16)
quartz()
cluster10<- cutree(fit, k=10)
colscale<- rainbow(10)
plot( fit1$points, col=colscale[ as.numeric(cluster10)],pch=16)
library( rgl)
fit2<- cmdscale( dSP, eig=TRUE, k=3)
plot3d( fit2$points, col=colscale[ as.numeric(cluster10)])
ls()
SP500Names
SP500Names["NFLX",]
SP500Names[" NFLX",]
SP500Names["NFLX ",]
SP500Names[,1]
SP500Names[1:10,]
SP500Names[cluster5=="2",]
