meanY<- mean( Y, na.rm = na.rm)
out<- c(range[1],
Qs[1],Qs[2], meanY, Qs[3],
range[2] )
# optional: add names to this vector
names( out)<- c("min",
"Q1", "mean", "median", "Q3",
"max")
return( out)
}
myStats( 1:10)
help( library)
library(spam,quietly = TRUE )
library( fields)
install.packages("spam", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library( dataWorkshop)
library(fields)
load("~/Home/Repositories/DataAnalysis101/Week03/BT.rda")
ls()
load("~/Home/Repositories/DataAnalysis101/Week03/BoulderTemperature.rda")
ls()
BoulderTemperature
help( "boxplot")
boxplot( BoulderTemperature[,c(12,1:11)]
)
boxplot( BoulderTemperature[,c(12,1:11)]
)
medianYear<- tapply( AudiA4$price, AudiA4$year, "median")
data( AudiA4)
medianYear<- tapply( AudiA4$price, AudiA4$year, "median")
medianYear
medianYear[Audi$year]
medianYear[AudiA4$year]
medianYear[format(AudiA4$year)]
medianYear<- tapply( AudiA4$price, AudiA4$year, "median")
yearString<- as.character(AudiA4$year)
percentPrice<- AudiA4$price/medianYear[yearString]
boxplot(percentPrice ~ AudiA4$year )
medianYear<- tapply( AudiA4$price, AudiA4$year, "median")
yearString<- as.character(AudiA4$year)
# need to convert years to characters so that
# they work for the subsetting/selection
percentPrice<- 100*AudiA4$price/medianYear[yearString]
boxplot(percentPrice ~ AudiA4$year, ylab="Percent from median" )
X<- cbind( AudiA4$year, AudiA4$mileage)
quilt.plot( X, log10(AudiA4$price), xlab="Model Year", ylab="Mileage")
title("Audi A4 asking prices")
z<- color.scale(AudiA4$price )
plot( X, col=z)
library( dataWorkshop)
data(BoulderTemperature)
# find the number of rows and columns
dim( BoulderTemperature)
# create a matrix to hold results
myStats<- matrix( NA, nrow=118, ncol=3)
BTMatrix<- BoulderTemperature
for( k in 1:118){
print(k)
TempYear<- c(BTMatrix[k,1:12])
myStats[k,] <- c( mean(TempYear),
median(TempYear),
sd(TempYear) )
}
k<- 5
TempYear<- c(BTMatrix[k,1:12])
TempYear
class( TempYear)
BTM<- as.matrix( BoulderTemperature)
# find the mean and median for each year
for( k in 1:118){
print(k)
TempYear<- c(BTM[k,1:12])
myStats[k,] <- c( mean(TempYear),
median(TempYear),
sd(TempYear) )
}
Year<- as.numeric( row.names( BoulderTemperature))
plot( Year, myStats[,1], xlab="year", ylab="Degrees F")
points( Year, myStats[,2], col="red")
data()
plot( myStats[,1:2])
t( BoulderTemperature)
B1<- t( BoulderTemperature)
# find the mean and median for each year
for( k in 1:118){
print(k)
TempYear<- c(B1[,k])
print(TempYear)
tStats<- c( mean(TempYear), median(TempYear), sd(TempYear) )
print(tStats)
myStats[k,1:3] <- tStats
}
B1<- t( BoulderTemperature)
# find the mean and median for each year
for( k in 1:118){
print(k)
TempYear<- c(B1[,k])
tStats<- c( mean(TempYear), median(TempYear), sd(TempYear) )
myStats[k,1:3] <- tStats
}
BT<- t( BoulderTemperature)
# find the mean and median for each year
for( k in 1:118){
tempYear<- BT[,k]
tStats<- c( mean(tempYear), median(tempYear), sd(tempYear) )
myStats[k,1:3] <- tStats
}
myStats
plot( c(1,12), range( B1) , type="l", ylim=range( BTM))
plot( c(1,12), range( B1, na.rm=TRUE) , type="n")
range( B1, na.rm=TRUE)
plot( c(1,12), c(15,80) , type="n")
for( k in 1:118){
if( myStats[k,1] > myStats[k,2] ){
lines( 1:12, BT[,k], col="red")
}
else{
lines( 1:12, BT[,k], col="blue")
}
}
x<- 1:10
y<- 5 + 2*x
lm( y~x)
set.seed( 122)
error<- rnorm( 10)*.2
y<- 5 + 2*x + error
lm( y ~ x)
lm( AudiA4$price ~AudiA4$mileage )
data(AudiA4)
lm( AudiA4$price ~AudiA4$mileage )
plot(AudiA4$mileage,AudiA4$price )
abline( fit$coefficients)
fit$coefficients
fit<- lm( AudiA4$price ~ AudiA4$mileage )
plot(AudiA4$mileage,AudiA4$price )
abline( fit$coefficients)
plot(AudiA4$mileage,AudiA4$price )
abline( fit$coefficients, col="orange2", lwd=3)
1999:2015
hold<- matrix( NA, nrow=17, ncol=2)
yr<- 1999:2015
for ( k in 1:17){
ind<- AudiA4$year == yr
fit<- lm( AudiA4$price[ind] ~ AudiA4$mileage[ind] )
hold[k,]<- fit$coefficients
}
fit
hold
help( lm)
hold<- matrix( NA, nrow=17, ncol=2)
yr<- 1999:2015
for ( k in 1:17){
ind<- AudiA4$year == yr
fit<- lm( AudiA4$price ~ AudiA4$mileage, subset=ind )
hold[k,]<- fit$coefficients
}
warnings()
hold<- matrix( NA, nrow=17, ncol=2)
yr<- 1999:2015
for ( k in 1:17){
ind<- AudiA4$year == yr[k]
fit<- lm( AudiA4$price ~ AudiA4$mileage, subset=ind )
hold[k,]<- fit$coefficients
}
hold
plot(AudiA4$mileage,AudiA4$price, pch=16, col="grey" )
for( k in 1:17){
abline( hold[k,], col="green2", lwd=2)
}
stats( hold)
fit0<- lm( AudiA4$price ~ AudiA4$mileage )
plot(AudiA4$mileage,AudiA4$price )
abline( fit0$coefficients, col="orange2", lwd=3)
fit0$coefficients
x<- seq( -3,3,out.length=100)
y<- seq( -3,3, out.length=100)
Z<- matrix( NA, 100, 100)
for( i in 1:100){
for( j in 1:100){
Z[i,j]<- exp( - (x[i]^2 + 2*y[j]^2) )
}
}
image.plot( x,y,Z)
x
x<- seq( -3,3,out.length=100)
y<- seq( -3,3, out.length=100)
Z<- matrix( NA, 100, 100)
x<- seq( -3,3,length.out = =100)
y<- seq( -3,3,length.out=100)
Z<- matrix( NA, 100, 100)
for( i in 1:100){
for( j in 1:100){
Z[i,j]<- exp( - (x[i]^2 + 2*y[j]^2) )
}
}
image.plot( x,y,Z)
x
x<- seq( -3,3, length.out = 100)
y<- seq( -3,3,length.out=100)
Z<- matrix( NA, 100, 100)
for( i in 1:100){
for( j in 1:100){
Z[i,j]<- exp( - (x[i]^2 + 2*y[j]^2) )
}
}
image.plot( x,y,Z)
persp( x,y, Z)
x<- seq( -3,3, length.out = 40)
y<- seq( -3,3,length.out=40)
Z<- matrix( NA, 40, 40)
for( i in 1:40){
for( j in 1:40){
Z[i,j]<- exp( - (x[i]^2 + 2*y[j]^2) )
}
}
image.plot( x,y,Z)
persp( x,y, Z)
help(persp)
persp( x,y, Z, phi=30, theta=45)
quartz()
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=30, theta=45)
persp( x,y, Z, phi=30, theta=45, shade=.8)
persp( x,y, Z, phi=30, theta=45, shade=.5)
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=30, theta=45, shade=.5, col="grey")
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=30, theta=45, shade=.3, col="grey")
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=30, theta=45, shade=.3, col="grey",
border="green3")
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=30, theta=45, shade=.3, col="grey80",
border="grey")
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=10, theta=45, shade=.3, col="grey80",
border="grey")
quartz()
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=10, theta=45, shade=.3, col="grey80",
border="grey")
par(mar=c(0,0,0,0))
persp( x,y, Z, phi=20, theta=45, shade=.3, col="grey80",
border="grey")
drape.plot( x,y,Z)
hold<- matrix( NA, nrow=17, ncol=2)
yr<- 1999:2015
for ( k in 1:17){
ind<- AudiA4$year == yr[k]
if( sum(ind)> 20){
fit<- lm( AudiA4$price ~ AudiA4$mileage, subset=ind )
hold[k,]<- fit$coefficients
}
}
# plotting all these
plot(AudiA4$mileage,AudiA4$price, pch=16, col="grey" )
for( k in 1:17){
abline( hold[k,], col="green2", lwd=2)
}
hold
# plotting all these
plot(AudiA4$mileage,AudiA4$price, pch=16, col="grey" )
for( k in 1:17){
if( !is.na( hold[k,1])){
abline( hold[k,], col="green2", lwd=2)
}
}
dev.off()
dev.off()
dev.off()
dev.off()
# plotting all these
plot(AudiA4$mileage,AudiA4$price, pch=16, col="grey" )
for( k in 1:17){
if( !is.na( hold[k,1])){
abline( hold[k,], col="green2", lwd=2)
}
}
cut( AudiA4$year, 4)
cut( AudiA4$year, 4) ==1
hold<- cut( AudiA4$year, 4)
hold
levels( hold)
cut( AudiA4$year, 4, format(1:4))
hold<-cut( AudiA4$year, 4)
hold<-cut( AudiA4$year, 4)
as.numeric(hold)
groups<- cut( AudiA4$year, 4)
groupID<- as.numeric( groups)
hold<- matrix( NA, nrow=4, ncol=2)
yr<- 1999:2015
for ( k in 1:4){
ind<- groupID == k
fit<- lm( AudiA4$price ~ AudiA4$mileage, subset=ind )
hold[k,]<- fit$coefficients
}
hold
plot(AudiA4$mileage,AudiA4$price, pch=16, col="grey" )
for( k in 1:17){
if( !is.na( hold[k,1])){
abline( hold[k,], col="green2", lwd=2)
}
}
plot( AudiA4$mileage, AudiA4$year)
library( dataWorkshop)
data( AudiA4)
library( fields)
plot(AudiA4$mileage, AudiA4$price,
xlab="Mileage", ylab="price", cex=.5 )
out<- sreg( AudiA4$mileage, AudiA4$price )
lines( out$predicted, col="red", lwd=4)
# some smooths by years
ind<- AudiA4$year < 2010
out1<- sreg( AudiA4$mileage[ind], AudiA4$price[ind] )
lines( out1$predicted, col="blue4", lwd=4, lty=2)
out2<- sreg( AudiA4$mileage[!ind], AudiA4$price[!ind] )
lines( out2$predicted, col="green4", lwd=4, lty=2)
par(xpd=TRUE)# allow legend to go outside the plot
legend( 140000, 50000,
legend=c("full data", "older than 2010", "2010 or newer"),
lty=c(1,2,2), col=c("red", "blue4", "green4"),
cex=.8)
library( fields)
plot(AudiA4$mileage, AudiA4$price,
xlab="Mileage", ylab="price", cex=.5 )
out<- sreg( AudiA4$mileage, AudiA4$price )
lines( out$predicted, col="red", lwd=4)
# some smooths by years
ind<- AudiA4$year < 2010
out1<- sreg( AudiA4$mileage[ind], AudiA4$price[ind] )
lines( out1$predicted, col="blue4", lwd=4, lty=2)
out2<- sreg( AudiA4$mileage[!ind], AudiA4$price[!ind] )
lines( out2$predicted, col="green4", lwd=4, lty=2)
par(xpd=TRUE)# allow legend to go outside the plot
legend( 140000, 50000,
legend=c("full data", "older than 2010", "2010 or newer"),
lty=c(1,2,2), col=c("red", "blue4", "green4"),
cex=.8)
legend( 140000, 50000,
legend=c("full data", "older than 2010", "2010 or newer"),
lty=c(1,2,2), col=c("red", "blue4", "green4"),
cex=.8, lwd=c(4,4,4))
legend( 140000, 50000,
legend=c("full data", "older than 2010", "2010 or newer"),
lty=c(1,2,2), col=c("red", "blue4", "green4"),
cex=.8, lwd=c(4,4,4), lty=c(1,2,2))
legend( 140000, 50000,
legend=c("full data", "older than 2010", "2010 or newer"),
col=c("red", "blue4", "green4"),
cex=.8, lwd=c(4,4,4), lty=c(1,2,2))
plot(AudiA4$mileage, AudiA4$price,
xlab="Mileage", ylab="price", cex=.5 )
out<- sreg( AudiA4$mileage, AudiA4$price )
lines( out$predicted, col="red", lwd=4)
# some smooths by years
ind<- AudiA4$year < 2010
out1<- sreg( AudiA4$mileage[ind], AudiA4$price[ind] )
lines( out1$predicted, col="blue4", lwd=4, lty=2)
out2<- sreg( AudiA4$mileage[!ind], AudiA4$price[!ind] )
lines( out2$predicted, col="green4", lwd=4, lty=2)
par(xpd=TRUE)# allow legend to go outside the plot
legend( 140000, 50000,
legend=c("full data", "older than 2010", "2010 or newer"),
col=c("red", "blue4", "green4"),
cex=.8, lwd=c(4,4,4), lty=c(1,2,2))
myFit<- function( x,y){
degree<- 2
fit<- lm(y~ x + I(x^2) )
A<- fit$coefficients
predValues<- A[1] + A[2]*x + A[3]*x^2
return( predValues)
}
data(AudiA4)
hold<- myFit( AudiA4$mileage, AudiA4$price)
# take a look
plot( AudiA4$mileage, AudiA4$price)
library( dataWorkshop)
data(AudiA4)
data(AudiA4)
hold<- myFit( AudiA4$mileage, AudiA4$price)
# take a look
plot( AudiA4$mileage, AudiA4$price)
data(AudiA4)
hold<- myFit( AudiA4$mileage, AudiA4$price)
# take a look
plot( AudiA4$mileage, AudiA4$price)
points(AudiA4$mileage,hold, col="seagreen")
lines(AudiA4$mileage,hold, col="red" )
myFit4<- function( x,y, xnew= sort(x), degree = 2 ){
# place holder in case this function is extended to other polynomials
if( degree != 2){
stop("Function does not handle this polynomial degree")
}
if( any(is.na(y))){
warning("y has missing values!")
}
fit<- lm(y~ x + I(x^2) )
A<- fit$coefficients
predValues<- A[1] + A[2]*xnew + A[3]*xnew^2
return(
list( fit = cbind( xnew, predValues),
degree = degree,
call= match.call()
)
)
}
mileage<-AudiA4$mileage
yTest<- AudiA4$price
yTest[1]<- NA
hold<- myFit4( mileage, yTest)
mileage<-AudiA4$mileage
yTest<- AudiA4$price
yTest[1]<- NA
hold<- myFit4( mileage, yTest, degree=4)
names( hold)
plot( fit)
plot( hold$fit)
plot( hold$fit, type='l')
hold$call
remove( list=ls())
load( "BoulderTemperature.rda")
setwd("~/Home/Repositories/DataAnalysis101/Week04")
load( "BoulderTemperature.rda")
dir()
Year<- as.numeric( row.names( BoulderTemperature))
BoulderAnnualTemp<- apply( BoulderTemperature, 1, mean)
BoulderTemperature
BoulderAnnualTemp
names( BoulderAnnualTemp) <- NULL
BoulderAnnualTemp
plot(Year, BoulderAnnualTemp, col="red" )
Nyear<- length( Year)
BoulderSmooth<- rep( NA, Nyear)
for( k in 1 : (Nyear) ){
# four years on either side
ind <- abs( Year - Year[k]) <= 4.0
BoulderSmooth[k] <- mean( BoulderAnnualTemp[ind]
, na.rm=TRUE )
}
result<- cbind( Year, BoulderSmooth)
plot( Year, BoulderAnnualTemp)
lines( result, col="blue", lwd=2)
points( result, col="blue4", cex=.5)
mySmooth<- function( x,y){
Hold<- rep( NA, length(x))
for( k in 1:length(x)){
ind<- abs( x- x[k]) <= 4.0
Hold[k] <- mean( y[ind], na.rm=TRUE)
}
results<- cbind( x, Hold)
return( results)
}
mySmooth<- function( x,y){
Hold<- rep( NA, length(x)
for( k in 1:length(x)){
ind<- abs( x- x[k]) <= 4.0
Hold[k] <- mean( y[ind], na.rm=TRUE)
}
results<- cbind( x, Hold)
return( results)
}
mySmooth<- function( x,y){
Hold<- rep( NA, length(x) )
for( k in 1:length(x)){
ind<- abs( x- x[k]) <= 4.0
Hold[k] <- mean( y[ind], na.rm=TRUE)
}
results<- cbind( x, Hold)
return( results)
}
result<- mySmooth( Year, BoulderAnnualTemp)
result2<- mySmooth( result[,1],result[,2])
plot( Year, BoulderAnnualTemp)
lines( result, col="orange")
lines( result2, col="green")
plot( Year, BoulderAnnualTemp)
lines( result, col="orange", lwd=2)
lines( result2, col="green", lwd=2)
mySmooth2<- function( x,y, span =10000){
Hold<- rep( NA, length(x) )
for( k in 1:length(x)){
ind<- abs( x- x[k]) <= span
Hold[k] <- mean( y[ind], na.rm=TRUE)
}
results<- cbind( x, Hold)
return( results)
}
ls()
data( AudiA4)
look<- mySmooth2( AudiA4$mileage,AudiA4$price )
plot( AudiA4$mileage,AudiA4$price )
lines( look, col="red", lwd=2)
plot( AudiA4$mileage,AudiA4$price )
points( look, col="red", lwd=2)
setwd("~/Home/Repositories/DataAnalysis101/Quiz1/etc")
load( "ufo.rda")
temp<- as.Date( ufo[,1], "%m/%d/%Y")
#ufo$date<- as.character(temp)
ufo$shape <- as.character( ufo$shape)
ufo$year<- as.numeric( year(temp) )
ufo$month<- month(temp)
ufo$datetime<- as.character(ufo$datetime )
library(lubridate)
load( "ufo.rda")
temp<- as.Date( ufo[,1], "%m/%d/%Y")
#ufo$date<- as.character(temp)
ufo$shape <- as.character( ufo$shape)
ufo$year<- as.numeric( year(temp) )
ufo$month<- month(temp)
ufo$datetime<- as.character(ufo$datetime )
save( ufo, file="ufoQuiz1.rda")
class(  ufo$datetime)
