# more classes
hist(BT$Temp, nclass=16,
xlab="Degrees F", main="Boulder average June Temperatures 1897-2012")
# locate the mean with a red vertical line
Bmean<- mean(BT$Temp)
abline( v=Bmean, col="red", lwd=4)
# WorldBank data on CO2 emissions per capita
load("WorldBankCO2")
WB<- WorldBankCO2
#Q how do you look at the first row on these data?
#Q make a scatterplot of GDP.cap and CO2.cap
#     (wealth of country verses the amoutn of CO2 emitted)
#Q Fix this plot by log transformations
# where we are going ...
x<- log10(WB$GDP.cap )
y<- log10( WB$CO2.cap)
plot( x,y, pch=16, col="grey", xlab="log 10 GDP", ylab="log 10 CO2")
# fitting a smooth statistical curve through the data
fit<- sreg( x,y)
lines( fit$predicted, col="orange4", lwd=4)
load("WorldBankCO2.rda")
library( dataWorkshop)
data(AudiA4)
AudiA4[1,]
dim(AudiA4 )
levels( AudiA4[,1])
AudiA4[,1]
unique( AudiA4[1,])
unique( AudiA4[,1])
is.numeric( AudiA4)
stats( AudiA4)
is.factor( AudiA4[,1])
AudiA4[1:10,1])
AudiA4[1:10,1]
is.numeric(AudiA4[1:10,1])
AudiA4[1,]
ls()
remove( list=ls())
data( AudiA4)
ls()
getCar
AudiRaw[1]
AudiA4Raw[1]
AudiA4Raw[1:10]
AudiA4[1,]
range( AudiA4[,4])
ls()
data( PilotSUV)
pilotSUV[1,]
PilotSUV[1,]
min(PilotSUV[,3])
which.min(PilotSUV[,3] )
PilotSUV[194,]
fields.style()
year<-  AudiA4[,1]
yfactor<-rep( NA, length( year))
yfactor[ year<=2003] <-1
yfactor[2004<= year & year<=2007]<-2
yfactor[2008<= year & year<=2011]<-3
yfactor[2012<= year & year<=2015]<-4
plot( AudiA4[,3]/1000, AudiA4[,2], col=yfactor,cex=.7, pch=16,
ylab="Asking Price", xlab="Mileage (thousands)")
out<- sreg( AudiA4[,3]/1000, AudiA4[,2], df=4)
lines( out$predicted, col="grey30", lwd=4)
title("Used Audi A4 prices cars.com")
legend(  150,44000,
legend=c("    -2003", "2004-2007", "2008-2011", "2012-2015"),
col=1:4, pch=16)
quartz()
fields.style()
year<-  AudiA4[,1]
yfactor<-rep( NA, length( year))
yfactor[ year<=2003] <-1
yfactor[2004<= year & year<=2007]<-2
yfactor[2008<= year & year<=2011]<-3
yfactor[2012<= year & year<=2015]<-4
plot( AudiA4[,3]/1000, AudiA4[,2], col=yfactor,cex=.7, pch=16,
ylab="Asking Price", xlab="Mileage (thousands)")
out<- sreg( AudiA4[,3]/1000, AudiA4[,2], df=4)
lines( out$predicted, col="grey30", lwd=4)
title("Used Audi A4 prices cars.com")
legend(  150,44000,
legend=c("    -2003", "2004-2007", "2008-2011", "2012-2015"),
col=1:4, pch=16)
data()
library( dataWorkshop)
ls()
remove( list=ls(0))
remove( list=ls())
ls()
data(Riflesight.rda)
data(RifleSight.rda)
data()
data(RifleSight)
ls()
rm( fig4.RifleSight)
rm( fig3.RifleSight)
ls()
rm(two.colors)
rm( fields.style)
ls()
source('~/Home/Projects/MJProject/fig.Riflesight.R', echo=TRUE)
ls()
save( ls(), file="~/Home/Src/dataWorkshop/data/MaryJane.rda")
save( list=ls(), file="~/Home/Src/dataWorkshop/data/MaryJane.rda")
ls()
fig.RifleSight()
dim( RifleDEM$z)
dim ( RifleI$z)
interp.surface.grid
help( interp.surface.grid)
average.image
look2 <- average.image(RifleI$z^3, 4)
look<- interp.surface.grid(RifleDEM, look2)
image.plot( look)
names( look)
look$x
dim( look$z)
image( look$z)
stats( c(look$z))
interp.surface.grid
interp.surface
stats( RifleI)
look2 <- average.image(RifleI$z^3, 8)
image.plot( look2)
look<- interp.surface.grid(RifleDEM, look2)
look$x
look$y
look2 <- average.image(RifleI, 8)
look2$z<- look2$z^3
look<- interp.surface.grid(RifleDEM, look2)
image.plot( look)
look2 <- average.image(RifleI, 8)
look2$z<- look2$z^3
look<- interp.surface.grid(RifleDEM, look2)
par(mar = c(0, 0, 0, 0))
pout <- drape.plot(RifleDEM, z2 = look2, phi = 15, theta = 120,
border = NA, ltheta = 100, lphi = 10, expand = 0.75,
box = FALSE, col = MJ.colors(), add.legend = FALSE, shade = 0.8)
uv <- trans3d(rifle.trail[, 1], rifle.trail[, 2], rifle.trail.elev,
pout)
lines(uv, col = "darkorange", lwd = 7)
pout <- drape.plot(look, z2 = look2, phi = 15, theta = 120,
border = NA, ltheta = 100, lphi = 10, expand = 0.75,
box = FALSE, col = MJ.colors(), add.legend = FALSE, shade = 0.8)
uv <- trans3d(rifle.trail[, 1], rifle.trail[, 2], rifle.trail.elev,
pout)
pout <- drape.plot(look, z2 = look2, phi = 15, theta = 120,
border = NA, ltheta = 100, lphi = 10, expand = 0.75,
box = FALSE, col = MJ.colors(), add.legend = FALSE, shade = 0.8)
dim( look$z)
dim( look2$z)
look2 <- average.image(RifleI, 8)
look2$z<- look2$z^3
look<- interp.surface.grid(RifleDEM, look2)
par(mar = c(0, 0, 0, 0))
pout <- drape.plot(look, z2 = look2, phi = 15, theta = 120,
border = NA, ltheta = 100, lphi = 10, expand = 0.75,
box = FALSE, col = MJ.colors(), add.legend = FALSE, shade = 0.8)
uv <- trans3d(rifle.trail[, 1], rifle.trail[, 2], rifle.trail.elev,
pout)
persp( look)
drape.plot( look, look2)
pout <- drape.plot(look, z2 = look2, phi = 15, theta = 120,
border = NA, ltheta = 100, lphi = 10, expand = 0.75,
box = FALSE)
args( drape.plot)
pout <- drape.plot(look, z2 = look2$z, phi = 15, theta = 120,
border = NA, ltheta = 100, lphi = 10, expand = 0.75,
box = FALSE, col = MJ.colors(), add.legend = FALSE, shade = 0.8)
uv <- trans3d(rifle.trail[, 1], rifle.trail[, 2], rifle.trail.elev,
pout)
lines(uv, col = "darkorange", lwd = 7)
fig.RifleSight()
source('~/Home/Projects/MJProject/fig.Riflesight.R', echo=TRUE)
fig.RifleSight()
source('~/Home/Projects/MJProject/fig.Riflesight.R', echo=TRUE)
fig.RifleSight()
ls()
rm( pout)
rm( look)
rm (look2)
rm (uv)
ls()
rm( fig.RifleSight)
source('~/Home/Projects/MJProject/fig.Riflesight.R', echo=TRUE)
ls()
RifleI -> RifleImage
rm( RifleI)
ls()
source('~/Home/Projects/MJProject/fig.Riflesight.R', echo=TRUE)
fig.Riflesight()
source('~/Home/Projects/MJProject/fig.Riflesight.R', echo=TRUE)
fig.Riflesight()
source('~/Home/Projects/MJProject/fig.Riflesight.R', echo=TRUE)
ls()
save( list=ls(), file="~/Home/Projects/MJProject/MaryJane.rda")
q()
load("~/Home/Projects/MJProject/MaryJane.rda")
ls()
range(c(RifleDEM$z))
dim( RifleImage$z)
diff(RifleImage$x )
1.158788e-05*111*1e3
diff(RifleImage$y )
.89e-05*111*1e3
fig.Riflesight
image.plot(RifleDEM, col=topo.colors(256) )
contour(RifleDEM, add=TRUE, col="grey20", lwd=.5)
lines(rifle.trial, col="magenta")
library( fields)
image.plot(RifleDEM, col=topo.colors(256) )
contour(RifleDEM, add=TRUE, col="grey20", lwd=.5)
lines(rifle.trial, col="magenta")
image.plot(RifleDEM, col=topo.colors(256) )
contour(RifleDEM, add=TRUE, col="grey20", lwd=.5)
lines(rifle.trial, col="magenta")
image.plot(RifleDEM, col=topo.colors(256) )
contour(RifleDEM, add=TRUE, col="grey20", lwd=.5)
lines(rifle.trail, col="magenta")
read.table( "test.dat")
read.table( "test.dat")-> look
library( lattice)
barchart( look$species)
barchart( look$species~ look$Category)
look
Reasonstats<- look
barchart(Species~Reason,data=Reasonstats,groups=Catergory, #
scales=list(x=list(rot=90,cex=0.8)))
barchart(Species~Reason,data=Reasonstats,groups=Catergory, #
scales=list(x=list(rot=90,cex=1.8)))
library(ggplot2)#
Animals <- read.table(#
header=TRUE, text='Category        Reason Species#
1   Decline       Genuine      24#
2  Improved       Genuine      16#
3  Improved Misclassified      85#
4   Decline Misclassified      41#
5   Decline     Taxonomic       2#
6  Improved     Taxonomic       7#
7   Decline       Unclear      41#
8  Improved       Unclear     117')
ggplot(Animals, aes(factor(Reason), Species, fill = Category)) + #
geom_bar(stat="identity", position = "dodge"))
ggplot(Animals, aes(factor(Reason), Species, fill = Category)) + #
geom_bar(stat="identity", position = "dodge")
ggplot(Animals, aes(factor(Reason), Species, fill = Category)) + #
geom_bar(stat="identity", position = "dodge)
)
)
)))
""
)
+()
)))
)
ggplot(Animals, aes(factor(Reason), Species, fill = Category))
ggplot(Animals, aes(factor(Reason), Species, fill = Category))+geom_bar()
ggplot(Animals, aes(factor(Reason), Species, fill = Category)) + #
geom_bar(stat="identity")
Animals
help( aes)
aes(factor(Reason), Species, fill = Category)
ggplot(Animals, aes(factor(Reason), Species, fill = Category)) + #
geom_bar(stat="identity", position = "dodge")
par()
points( .5,.5)
library( LatticeKrig)
help(LatticeKrig)
set.seed( 123)
N<- 1000
x<-  matrix( runif(3* N,-1,1), ncol=3, nrow=N)
y<-   10*exp( -rdist( x, rbind( c(.5,.5,.6) ) )/.5)
# NOTE setting of memory size for Cholesky. This avoids some warnings and
# extra computation by the spam package
LKinfo<- LKrigSetup( x,  nlevel=1,  a.wght= 6.01, NC=6, NC.buffer=2,
LKGeometry="LKBox", normalize=FALSE, mean.neighbor=200,
choleskyMemory=list(nnzR= 2E6) )
out1<- LatticeKrig( x,y, LKinfo=LKinfo)
out1
library( dataWorkshop)
data( AudiA4)
boxplot( AudiA4$price)
library( dataWorkshop)
data( AudiA4)
boxplot( AudiA4$mileage)
boxplot( AudiA4$mileage/1000)
par()$usr
points( 1,50, pch=16, cex=3)
boxplot( y)
text( 1.5,median(y),"Median (Notch)")
y<- AudiA4$mileage/1000
boxplot( y)
text( 1.5,median(y),"Median (Notch)")
boxplot( y)
text( 1.5,median(y),"Median (Notch)", adj=0)
boxplot( y)
text( 1.0,median(y),"Median (Notch)", adj=0)
boxplot( y)
text( 1.2,median(y),"Median (Notch)", adj=0)
text( 1.2,median(y)," <- Median (Notch)", adj=0)
boxplot( y)
text( 1.2,median(y)," <- Median (Notch)", adj=0)
y<- AudiA4$mileage/1000
boxplot( y)
text( 1.2,median(y)," <- Median (notch)", adj=0)
text( 1.2,quantile(y, .25)," <- 25% (lower hinge)", adj=0)
text( 1.2,quantile(y, .75)," <- 75% (upper hinge)", adj=0)
par()
boxplot( y)
par(xpd=TRUE)
text( 1.2,median(y)," <- Median (notch)", adj=0)
text( 1.2,quantile(y, .25)," <- 25% (lower hinge)", adj=0)
text( 1.2,quantile(y, .75)," <- 75% (upper hinge)", adj=0)
y<- AudiA4$mileage/1000
boxplot( y, col="green4")
par(xpd=TRUE)
text( 1.2,median(y)," <- Median (notch)", adj=0)
text( 1.2,quantile(y, .25)," <- 25% (lower hinge)", adj=0)
text( 1.2,quantile(y, .75)," <- 75% (upper hinge)", adj=0)
boxplot( y)-> look
look
max( y[ y < median(y) +  1.5* IQR])
IQR<- quantile(y, .75) - quantile(y, .25)
max( y[ y < median(y) +  1.5* IQR])
max( y[ y < quantile(y, .75) +  1.5* IQR])
max( y[ y < quantile(y, .75) +  1.5* IQR])
min( y[ y > quantile(y, .25) -  1.5* IQR] )
text( 1.2,W2," <- whisker", adj=0)
W2<- max( y[ y < quantile(y, .75) +  1.5* IQR])
W1<- min( y[ y > quantile(y, .25) -  1.5* IQR] )
text( 1.2,W2," <- whisker", adj=0)
text( 1.2,W21," <- whisker", adj=0)
text( 1.2,W2," <- whisker", adj=0)
text( 1.2,W1," <- whisker", adj=0)
help( "arrow")
plot( 1:10, 2:11)
text( 6,4, label="This is a comment")
text( 1,-2, label="This is a comment")
par( xpd=FALSE)
text( 1,-2, label="This is a comment")
par( xpd=TRUE)
text( 1,-2, label="This is a comment")
help("par")
source('~/.active-rstudio-document', echo=TRUE)
load("~/Home/Teaching/RDataAnalysis/Week2/AudiA4.rda")
ls()
remove(list=ls())
load("~/Home/Teaching/RDataAnalysis/Week2/AudiA4.rda")
ls()
obj<- cut(AudiA4$mileage/1000, 8)
table( obj)
obj<- cut(AudiA4$mileage/1000, breaks= pretty(AudiA4$mileage/1000, 8 ))
mClass<- table( obj)
mClass
?"ggplot"
ggplot( aes( mClass)) +geom_bar(stat = "identity")
ggplot(AudiA4, aes( x= mileage , y=price), factor=year )  + geom_point()
ggplot(AudiA4, aes( x= mileage , y=price), color=year )  + geom_point()
AudiA4[1,]
ggplot(AudiA4, aes( x= mileage , y=price , color=year ) )  + geom_point(shape=1) +
scale_colour_hue(l=50)
ggplot(AudiA4, aes( x= mileage , y=price , color=year ) )  + geom_point(shape=1)
ggplot(AudiA4, aes( x= mileage , y=price , color=as.factor(year) ) )  + geom_point(shape=1)
yearFactor<- cut( year,breaks=5)
ggplot(AudiA4, aes( x= mileage , y=price , color=yearFactor ) )  + geom_point(shape=1)
ggplot(AudiA4, aes( x= mileage , y=price , color= cut( year,breaks=5) ) )  + geom_point(shape=1)
quartz()
ggplot(AudiA4, aes( x= mileage , y=price , color= cut( year,breaks=5) ) )  + geom_point(shape=1)
ggplot(AudiA4, aes( x= mileage , y=price , color= cut( year,breaks=5) ) )  +
geom_point(shape=2)
help( "geom_point")
ggplot(AudiA4, aes( x= mileage , y=price , color= cut( year,breaks=5) ) )  +
geom_point(shape=16)
ggplot(AudiA4, aes( x= mileage , y=year , color= price ) )
geom_point(shape=16)
ggplot(AudiA4, aes( x= mileage , y=year , color= price ) )   +
geom_point(shape=16)
data( diamonds)
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
(d <- ggplot(dsamp, aes(carat, price)) +
geom_point(aes(colour = clarity)))
d + scale_colour_brewer(palette = "Greens")
d + scale_colour_brewer(palette = "Set1")
help( "scale_color_hue")
scale_color_hue(..., h = c(0, 360) + 15, c = 100, l = 65, h.start = 0,
direction = 1, na.value = "grey50")
d + scale_colour_hue(l=40, c=30)
d + scale_colour_hue(h=c(180, 270)
)
d + geom_point(alpha = 0.9)
set.panel( 2,2)
library( fields)
set.panel( 2,2)
d + geom_point(alpha = 0.9)
p1 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet, group=Chick)) +
geom_line() +
ggtitle("Growth curve for individual chicks")
# Second plot
p2 <- ggplot(ChickWeight, aes(x=Time, y=weight, colour=Diet)) +
geom_point(alpha=.3) +
geom_smooth(alpha=.2, size=1) +
ggtitle("Fitted growth curve per diet")
# Third plot
p3 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, colour=Diet)) +
geom_density() +
ggtitle("Final weight, by diet")
# Fourth plot
p4 <- ggplot(subset(ChickWeight, Time==21), aes(x=weight, fill=Diet)) +
geom_histogram(colour="black", binwidth=50) +
facet_grid(Diet ~ .) +
ggtitle("Final weight, by diet") +
theme(legend.position="none")        # No legend (redundant in this graph)
multiplot(p1, p2, p3, p4, cols=2)
setwd("~/Home/Teaching/RDataAnalysis/Week2")
library( dataWorkshop)
data( AudiA4)
mileGroups<- cut(AudiA4$mileage/1000, breaks=8)
table( mileGroups)
tapply( AudiA4$price, mileGroups, FUN=median)
breaks<- pretty( AudiA4$mileage/1000,8)
breaks
breaks<- pretty( AudiA4$mileage/1000,10)
breaks
mileageCuts<- pretty( AudiA4$mileage/1000,5)
mileGroups<- cut(AudiA4$mileage/1000, breaks= mileageCuts)
table( mileGroups)
tapply( AudiA4$price, mileGroups, FUN=median)
mileGroups<- cut(AudiA4$mileage/1000, breaks= c(0,50,100,150,200) )
# how many in each group?
table( mileGroups)
# median price fr each group
tapply( AudiA4$price, mileGroups, FUN=median)
boxplot(AudiA4$price ~ mileGroups )
load("BoulderTemperature.rda") # monthly mean temperatures
# check out first row
BoulderTemperature[1,]
#extrract 1991 - 2010
tempData<- BoulderTemperature[94 + (1:20),]
apply( tempData, 1, FUN = mean) # by rows, 1 = first index
apply( tempData, 2, FUN = mean) # by cols, 2 = second index
byMonth<- apply( tempData, 2, FUN = mean) # by cols, 2 = second index
byMonth
byYear<- apply( tempData, 1, FUN = mean) # by rows, 1 = first index
byYear
plot( byYear)
boxlot(BoulderTemperatures )
boxplot(BoulderTemperatures )
boxplot(BoulderTemperature )
set.seed( 223) # set the random seed so we all get the same sample (223 is arbitrary)
y1<- runif(10)
y2<- y1 + 5
y3 <- y1*2
y4<- y1
y4[1] <- 5
exampleData<- cbind( y1,y2,y3,y4)
boxplot( exampleData)
# Q take a look at how y1-y4 are different and make sure you
# see how the differences are reflected int eh boxplots
# a different format for making boxplots
# take the data set in the form of a table and
# reformat as a single set os values but create a separate  group id to
# indicate the group each value belongs to.
# use the magic c function to string the table as one long set of values
exampleData2<- c( exampleData)
sampleID <- rep(1:4,c(10,10,10,10))
# you might want to print out tempData, tempData2 and sampleID to make
# sure you understand the differences.
plot( sampleID, tempData2)
# a handy way to make boxplots when you have a group id:
boxplot( tempData2 ~ sampleID)
boxplot( exampleData)
reomve(list=ls())
remove(list=ls())
source('~/Home/Teaching/RDataAnalysis/Week2/Rapply.R', echo=TRUE)
boxplot( exampleData2 ~ sampleID)
mileGroups<- cut(AudiA4$mileage/1000, breaks= c(0,50,100,150,200) )
# how many in each group?
table( mileGroups)
# how to find median price for each group
tapply( AudiA4$price, mileGroups, FUN=median)
source('~/Home/Teaching/RDataAnalysis/Week2/Rapply.R', echo=TRUE)
